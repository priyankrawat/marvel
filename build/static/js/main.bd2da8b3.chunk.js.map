{"version":3,"sources":["img/logo.png","components/ui/Header.js","img/spinner.gif","components/ui/Spinner.js","components/characters/Characteritem.js","components/characters/Charactergrid.js","components/ui/Search.js","App.js","index.js"],"names":["Header","className","src","logo","alt","Spinner","spinner","style","width","margin","display","Characteritem","item","thumbnail","path","name","description","Charactergrid","items","isLoading","map","id","Search","getQuery","useState","text","setText","type","placeholder","autoFocus","value","onChange","e","q","target","hash","App","setItems","loading","query","setQuery","useEffect","a","axios","result","console","log","data","results","process","fetchItems","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAAe,G,MAAA,IAA0B,kC,OCS1BA,EARA,WACX,OACI,wBAAQC,UAAU,SAAlB,SACI,qBAAKC,IAAKC,EAAMC,IAAI,Q,gBCJjB,MAA0B,oCCa1BC,EAVC,WACZ,OACI,qBACAH,IAAKI,EACLC,MAAO,CAAEC,MAAO,QAASC,OAAQ,OAAQC,QAAS,SAClDN,IAAI,kBCcGO,EApBO,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACpB,OACI,qBAAKX,UAAU,OAAf,SACA,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,aAAf,SACA,qBAAKC,IAAKU,EAAKC,UAAUC,KAAO,wBAAyBV,IAAI,OAE7D,sBAAKH,UAAU,YAAf,UACE,6BAAKW,EAAKG,OACV,6BACE,6BACE,iCAASH,EAAKI,2BCIfC,EAbO,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,MACpB,OAD0C,EAAfC,UACP,cAAC,EAAD,IAEZ,yBAASlB,UAAU,QAAnB,SACCiB,EAAME,KAAI,SAAAR,GAAI,OACX,cAAC,EAAD,CAA6BA,KAAMA,GAAfA,EAAKS,UCe1BC,EAtBA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACd,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAKA,OACG,yBAASzB,UAAU,SAAnB,SACI,+BACI,uBACE0B,KAAK,OACL1B,UAAU,eACV2B,YAAY,wBACZC,WAAS,EACTC,MAAOL,EACPM,SAAU,SAACC,GAAD,OAbLC,EAaqBD,EAAEE,OAAOJ,MAZ5CJ,EAAQO,QACRV,EAASU,GAFI,IAACA,UCGhBE,EAAO,mCAyCEC,EAxCH,WACV,MAA0BZ,mBAAS,IAAnC,mBAAON,EAAP,KAAcmB,EAAd,KACA,EAA6Bb,oBAAS,GAAtC,mBAAOc,EAAP,KAAgBnB,EAAhB,KACA,EAA0BK,mBAAS,IAAnC,mBAAOe,EAAP,KAAcC,EAAd,KA0BA,OAvBAC,qBAAU,YACQ,uCAAG,8BAAAC,EAAA,yDACN,KAARH,EADc,gCAEMI,IAAM,6GAAD,OACqFR,IAHhG,OAETS,EAFS,OAKfC,QAAQC,IAAIF,EAAOG,KAAKA,KAAKC,SAC7BX,EAASO,EAAOG,KAAKA,KAAKC,SAC1B7B,GAAU,GAPK,wCASMwB,IAAM,kEAAD,OAC0CJ,EAD1C,wBAC+DU,mCAD/D,iBACiGd,IAV5G,QASTS,EATS,OAYfC,QAAQC,IAAIF,EAAOG,KAAKA,KAAKC,SAC7BX,EAASO,EAAOG,KAAKA,KAAKC,SAC1B7B,GAAU,GAdK,4CAAH,qDAoBhB+B,KACC,CAACX,IAEF,8BACE,sBAAKtC,UAAU,YAAf,UACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAQsB,SAAU,SAAAU,GAAC,OAAIO,EAASP,MAChC,cAAC,EAAD,CAAef,MAAOA,EAAOC,UAAWmB,UCvC9Ca,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bd2da8b3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.bd728abd.png\";","import logo from '../../img/logo.png'\nconst Header = () => {\n    return (\n        <header className='center'>\n            <img src={logo} alt='' />\n        </header>\n    )\n}\n\nexport default Header\n","export default __webpack_public_path__ + \"static/media/spinner.11d9cde8.gif\";","import React from 'react'\nimport spinner from '../../img/spinner.gif'\n\nconst Spinner = () => {\n    return (\n        <img\n        src={spinner} \n        style={{ width: '250px', margin: 'auto', display: 'block'}}\n        alt='Loading.....'\n        />\n    )\n}\n\nexport default Spinner\n","import React from 'react'\n\nconst Characteritem = ({item}) => {\n    return (\n        <div className='card'>\n        <div className='card-inner'>\n          <div className='card-front'>\n          <img src={item.thumbnail.path + \"/portrait_uncanny.jpg\"} alt=''/>\n          </div>\n          <div className='card-back'>\n            <h1>{item.name}</h1>\n            <ul>\n              <li>\n                <strong>{item.description}</strong> \n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    )\n}\n\nexport default Characteritem\n","import React from 'react'\nimport Spinner from '../ui/Spinner'\nimport Characteritem from './Characteritem'\n\nconst Charactergrid = ({items, isLoading}) => {\n    return isLoading ? (<Spinner />) : (\n        (\n            <section className='cards'>\n            {items.map(item => (\n                <Characteritem key={item.id} item={item}/>\n                ))}\n                </section>\n                \n        ) \n    )\n}\n\nexport default Charactergrid\n","import React, {useState} from 'react'\n\nconst Search = ({ getQuery }) => {\n    const [text, setText] = useState('')\n    const onChange = (q) => {\n        setText(q)\n        getQuery(q)\n    }\n    return (\n       <section className='search'>\n           <form>\n               <input\n                 type='text'\n                 className='form-control'\n                 placeholder='Search Characters....'\n                 autoFocus\n                 value={text}\n                 onChange={(e) => onChange(e.target.value)}\n                 />\n           </form>\n       </section>\n    )\n}\n\nexport default Search\n","import './App.css'\nimport Header from './components/ui/Header';\nimport axios from 'axios'\nimport { useEffect, useState } from 'react';\nimport Charactergrid from './components/characters/Charactergrid';\nimport Search from './components/ui/Search';\n\nconst hash = \"01ba5ca5394b332fb8163313e0909d11\"\nconst App = () => {\n  const [items, setItems] = useState('')\n  const [loading, isLoading] = useState(true)\n  const [query, setQuery] = useState('')\n\n\n  useEffect(() => {\n    const fetchItems = async () => {\n      if(query==='') {\n        const result = await axios(\n          `http://gateway.marvel.com/v1/public/characters?limit=20&ts=1&apikey=b75b3e36882f682bbfd481f1eac4c181&hash=${hash}`\n          )\n        console.log(result.data.data.results)\n        setItems(result.data.data.results)\n        isLoading(false)\n      } else {\n        const result = await axios(\n          `https://gateway.marvel.com/v1/public/characters?nameStartsWith=${query}&ts=1&apikey=${process.env.REACT_APP_api}&hash=${hash}`\n          )\n        console.log(result.data.data.results)\n        setItems(result.data.data.results)\n        isLoading(false)\n      }\n      \n      \n\n    }\n    fetchItems();\n  }, [query])\n  return (\n    <div>\n      <div className=\"container\">\n      <Header />\n      <Search getQuery={q => setQuery(q)}/>\n      <Charactergrid items={items} isLoading={loading}/>\n    </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}